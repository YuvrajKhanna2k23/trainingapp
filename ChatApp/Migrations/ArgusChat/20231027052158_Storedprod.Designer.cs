// <auto-generated />
using System;
using ChatApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatApp.Migrations.ArgusChat
{
    [DbContext(typeof(ArgusChatContext))]
    [Migration("20231027052158_Storedprod")]
    partial class Storedprod
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SignalId")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.HasKey("Id")
                        .HasName("PK__Connecti__3214EC0752B5B5B3");

                    b.HasIndex(new[] { "ProfileId" }, "UQ__Connecti__290C88E566218098")
                        .IsUnique();

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.ConversationResult", b =>
                {
                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("GetAllConversationByUserIdsBoth", (string)null);
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__Groups__3214EC070D064E64");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Admin")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__GroupMem__3214EC07C964097E");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProfileId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.GroupMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("IsReply")
                        .HasColumnType("int");

                    b.Property<string>("RepliedContent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RepliedToId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__GroupMes__3214EC0774F16260");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupMessages");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsReply")
                        .HasColumnType("int");

                    b.Property<int>("IsSeen")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<string>("RepliedContent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RepliedToId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0745632285");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC0783D43A3E");

                    b.HasIndex("GroupId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Designation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Email ");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileType")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC076B648D03");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Connection", b =>
                {
                    b.HasOne("ChatApp.Context.EntityClasses.Profile", "Profile")
                        .WithOne("Connection")
                        .HasForeignKey("ChatApp.Context.EntityClasses.Connection", "ProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_Messages_ProfileId_To_Profiles");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Group", b =>
                {
                    b.HasOne("ChatApp.Context.EntityClasses.Profile", "CreatedByNavigation")
                        .WithMany("Groups")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Groups_CreatedBy_To_Profiles");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.GroupMember", b =>
                {
                    b.HasOne("ChatApp.Context.EntityClasses.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_GroupMembers_GrpId_To_Groups");

                    b.HasOne("ChatApp.Context.EntityClasses.Profile", "Profile")
                        .WithMany("GroupMembers")
                        .HasForeignKey("ProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_GroupMembers_ProfileId_To_Profiles");

                    b.Navigation("Group");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.GroupMessage", b =>
                {
                    b.HasOne("ChatApp.Context.EntityClasses.Group", "Group")
                        .WithMany("GroupMessages")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_GroupMessages_GrpId_To_Groups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Notification", b =>
                {
                    b.HasOne("ChatApp.Context.EntityClasses.Group", "Group")
                        .WithMany("Notifications")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Notifications_GroupID_To_Groups");

                    b.HasOne("ChatApp.Context.EntityClasses.Profile", "Receiver")
                        .WithMany("NotificationReceivers")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_ToId_To_Profiles");

                    b.HasOne("ChatApp.Context.EntityClasses.Profile", "Sender")
                        .WithMany("NotificationSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_FromId_To_Profiles");

                    b.Navigation("Group");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Group", b =>
                {
                    b.Navigation("GroupMembers");

                    b.Navigation("GroupMessages");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ChatApp.Context.EntityClasses.Profile", b =>
                {
                    b.Navigation("Connection");

                    b.Navigation("GroupMembers");

                    b.Navigation("Groups");

                    b.Navigation("NotificationReceivers");

                    b.Navigation("NotificationSenders");
                });
#pragma warning restore 612, 618
        }
    }
}
